@import "src/styles/layout.outlets";
// Custom Theming for Angular Material
// For more information: https://material.angular.io/guide/theming
@import '~@angular/material/theming';
// Plus imports for other components in your app.

// Include the common styles for Angular Material. We include this here so that you only
// have to load a single css file for Angular Material in your app.
// Be sure that you only ever include this mixin once!
@include mat-core();

// Define the palettes for your theme using the Material Design palettes available in palette.scss
// (imported above). For each palette, you can optionally specify a default, lighter, and darker
// hue. Available color palettes: https://material.io/design/color/
$gui-primary: mat-palette($mat-indigo);
$gui-accent: mat-palette($mat-pink, A200, A100, A400);

// The warn palette is optional (defaults to red).
$gui-warn: mat-palette($mat-red);

// Create the theme object (a Sass map containing all of the palettes).
$gui-theme: mat-light-theme($gui-primary, $gui-accent, $gui-warn);

// Include theme styles for core and each component used in your app.
// Alternatively, you can import and @include the theme mixins for each component
// that you are using.
@include angular-material-theme($gui-theme);

/* You can add global styles to this file, and also import other style files */

*,
*::after,
*::before {
  box-sizing: border-box;
}

html,
body {
  position: relative;
  height: 100%;
  min-height: 100%;
  font-size: 16px;
}

body {
  margin: 0;
  color: var(--basic-text-color);
  background: var(--background-body);
}

button:focus {
  outline: 0;
}

input[type="number"]:focus {
  outline: 0;
}

.bold {
  font-weight: bold;
}

.row {
  display: grid;
  grid-template-columns: repeat(12, 1fr);

  h3.head {
    margin-top: 0;
    padding-left: 1rem;
  }

  &:first-child {
    margin-top: 1rem;
  }

  &:last-child {
    margin-bottom: 1rem;
  }

  .label {
    grid-column: 2 span;
  }

  .content {
    grid-column: 10 span;
  }

  .line {
    grid-column: 12 span;

    & > * {
      margin: 0 0.5rem;

      &:first-child {
        margin-left: 0;
      }
    }
  }
}

.disabled {
  &:active {
    pointer-events: none;
  }
}
